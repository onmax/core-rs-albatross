[workspace]
##
## !!! NOTE: If you add a nimiq module here, also add it to log/src/lib.rs !!!
##
members = [
  "blockchain",
  "blockchain-interface",
  "blockchain-proxy",
  "bls",
  "client",
  "collections",
  "consensus",
  "database",
  "database/database-value",
  "database/database-value-derive",
  "dht",
  "fuzz",
  "genesis",
  "genesis-builder",
  "handel",
  "hash",
  "hash/hash_derive",
  "key-derivation",
  "keys",
  "lib",
  "light-blockchain",
  "log",
  "macros",
  "mempool",
  "mempool/mempool-task",
  "metrics-server",
  "mnemonic",
  "network-interface",
  "network-libp2p",
  "network-mock",
  "pow-migration",
  "primitives",
  "primitives/account",
  "primitives/block",
  "primitives/mmr",
  "primitives/subscription",
  "primitives/transaction",
  "primitives/trie",
  "rpc-client",
  "rpc-interface",
  "rpc-server",
  "serde",
  "serde/derive",
  "spammer",
  "tendermint",
  "test-log",
  "test-log/proc-macro",
  "test-utils",
  "time",
  "tools",
  "transaction-builder",
  "utils",
  "validator",
  "validator-network",
  "vrf",
  "wallet",
  "web-client",
  "zkp",
  "zkp-circuits",
  "zkp-component",
  "zkp-component/zkp-prove",
  "zkp-primitives",
  "zkp-primitives/pedersen-generators",
]

resolver = "2"

# Force nimiq-bls and nimiq-zkp to be built with optimization level 2 in
# the test profiles. This is necessary in order to have decent tests
# performance. We do the same with nimiq-bls dev profile because it is compiled
# for a lot of other crates's tests.
#
# This turned out to be faster than using the highest optimization level 3.
[profile.dev.package.nimiq-bls]
opt-level = 2

[profile.test.package.nimiq-bls]
opt-level = 2

[profile.dev.package.nimiq-zkp-circuits]
opt-level = 2

[profile.test.package.nimiq-zkp-circuits]
opt-level = 2

[profile.dev.package.nimiq-zkp-primitives]
opt-level = 2

[profile.test.package.nimiq-zkp-primitives]
opt-level = 2

[profile.dev.package.nimiq-zkp]
opt-level = 2

[profile.test.package.nimiq-zkp]
opt-level = 2

[profile.dev.package.nimiq-pedersen-generators]
opt-level = 2

[profile.test.package.nimiq-pedersen-generators]
opt-level = 2

[profile.release]
lto = "thin"

[profile.release-wasm]
inherits = "release"
lto = "fat"          # Same as lto = true
opt-level = "s"      # Optimize for size
strip = "debuginfo"

[profile.release-with-debug]
debug = true
inherits = "release"

# Force arkworks to be built with optimization level 2.
[profile.dev.package.ark-ff]
opt-level = 2

[profile.test.package.ark-ff]
opt-level = 2

[profile.dev.package.ark-ec]
opt-level = 2

[profile.test.package.ark-ec]
opt-level = 2

[profile.dev.package.ark-mnt4-753]
opt-level = 2

[profile.test.package.ark-mnt4-753]
opt-level = 2

[profile.dev.package.ark-mnt6-753]
opt-level = 2

[profile.test.package.ark-mnt6-753]
opt-level = 2

[profile.dev.package.ark-crypto-primitives]
opt-level = 2

[profile.test.package.ark-crypto-primitives]
opt-level = 2

[patch.crates-io]
ark-ec = { git = "https://github.com/paberr/algebra", branch = "pb/0.4" }
ark-ff = { git = "https://github.com/paberr/algebra", branch = "pb/0.4" }
ark-r1cs-std = { git = "https://github.com/paberr/r1cs-std", branch = "pb/fix-pedersen" }

[workspace.package]
version = "1.0.6"
authors = ["The Nimiq Core Development Team <info@nimiq.com>"]
edition = "2021"
homepage = "https://nimiq.com"
repository = "https://github.com/nimiq/core-rs-albatross"
license = "Apache-2.0"
categories = ["cryptography::cryptocurrencies"]
keywords = ["nimiq", "cryptocurrency", "blockchain"]

[workspace.lints]
clippy.assigning_clones = "allow"                                              # false positives: https://github.com/rust-lang/rust-clippy/issues/12709
clippy.empty_docs = "allow"                                                    # false positives: https://github.com/rust-lang/rust-clippy/issues/12377
clippy.large_enum_variant = "allow"
clippy.too_many_arguments = "allow"
clippy.type_complexity = "allow"
rust.unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tokio_unstable)'] }
rust.unused_qualifications = "warn"

[workspace.dependencies]
futures = { package = "futures-util", version = "0.3.30" }
log = { package = "tracing", version = "0.1.40", features = ["log"] }

nimiq = { path = "lib", package = "nimiq-lib", default-features = false }
nimiq-account = { path = "primitives/account", default-features = false }
nimiq-block = { path = "primitives/block", default-features = false }
nimiq-blockchain = { path = "blockchain", default-features = false }
nimiq-blockchain-interface = { path = "blockchain-interface", default-features = false }
nimiq-blockchain-proxy = { path = "blockchain-proxy", default-features = false }
nimiq-bls = { path = "bls", default-features = false }
nimiq-collections = { path = "collections", default-features = false }
nimiq-consensus = { path = "consensus", default-features = false }
nimiq-database = { path = "database", default-features = false }
nimiq-database-value = { path = "database/database-value", default-features = false }
nimiq-database-value-derive = { path = "database/database-value-derive", default-features = false }
nimiq-dht = { path = "dht", default-features = false }
nimiq-genesis = { path = "genesis", default-features = false }
nimiq-genesis-builder = { path = "genesis-builder", default-features = false }
nimiq-handel = { path = "handel", default-features = false }
nimiq-hash = { path = "hash", default-features = false }
nimiq-hash_derive = { path = "hash/hash_derive", default-features = false }
nimiq-jsonrpc-client = { version = "0.2.2", default-features = false }
nimiq-jsonrpc-core = { version = "0.2.2", default-features = false }
nimiq-jsonrpc-derive = { version = "0.2.2", default-features = false }
nimiq-jsonrpc-server = { version = "0.2.2", default-features = false }
nimiq-key-derivation = { path = "key-derivation", default-features = false }
nimiq-keys = { path = "keys", default-features = false }
nimiq-light-blockchain = { path = "light-blockchain", default-features = false }
nimiq-log = { path = "log", default-features = false }
nimiq-macros = { path = "macros", default-features = false }
nimiq-mempool = { path = "mempool", default-features = false }
nimiq-mempool-task = { path = "mempool/mempool-task", default-features = false }
nimiq-metrics-server = { path = "metrics-server", default-features = false }
nimiq-mmr = { path = "primitives/mmr", default-features = false }
nimiq-mnemonic = { path = "mnemonic", default-features = false }
nimiq-network-interface = { path = "network-interface", default-features = false }
nimiq-network-libp2p = { path = "network-libp2p", default-features = false }
nimiq-network-mock = { path = "network-mock", default-features = false }
nimiq-pedersen-generators = { path = "zkp-primitives/pedersen-generators", default-features = false }
nimiq-primitives = { path = "primitives", default-features = false }
nimiq-rpc-interface = { path = "rpc-interface", default-features = false }
nimiq-rpc-server = { path = "rpc-server", default-features = false }
nimiq-serde = { path = "serde", default-features = false }
nimiq-subscription = { path = "primitives/subscription", default-features = false }
nimiq-tendermint = { path = "tendermint", default-features = false }
nimiq-test-log = { path = "test-log", default-features = false }
nimiq-test-log-proc-macro = { path = "test-log/proc-macro", default-features = false }
nimiq-test-utils = { path = "test-utils", default-features = false }
nimiq-time = { path = "time", default-features = false }
nimiq-transaction = { path = "primitives/transaction", default-features = false }
nimiq-transaction-builder = { path = "transaction-builder", default-features = false }
nimiq-trie = { path = "primitives/trie", default-features = false }
nimiq-utils = { path = "utils", default-features = false }
nimiq-validator = { path = "validator", default-features = false }
nimiq-validator-network = { path = "validator-network", default-features = false }
nimiq-vrf = { path = "vrf", default-features = false }
nimiq-wallet = { path = "wallet", default-features = false }
nimiq-web-client = { path = "web-client", default-features = false }
nimiq-zkp = { path = "zkp", default-features = false }
nimiq-zkp-circuits = { path = "zkp-circuits", default-features = false }
nimiq-zkp-component = { path = "zkp-component", default-features = false }
nimiq-zkp-primitives = { path = "zkp-primitives", default-features = false }
